#+TITLE: Waldo
#+AUTHOR: Marco Bauce
#+DESCRIPTION: Literate Programming for Waldo, a VIM clutch Pedal
#+LANGUAGE: en

Waldo a VIM Clutch Pedal

We're using no_std and no_main
#+NAME: macros
#+BEGIN_SRC rust
#![no_std]
#![no_main]

#+END_SRC

use esp_hal
#+NAME: imports
#+BEGIN_SRC rust
use esp_backtrace as _;
use esp_hal::{delay::Delay, prelude::*};

#+END_SRC

#+NAME: main
#+BEGIN_SRC rust
#[entry]
fn main() -> ! {
    #[allow(unused)]
    let peripherals = esp_hal::init(esp_hal::Config::default());
    let delay = Delay::new();

    esp_println::logger::init_logger_from_env();

    loop {
        log::info!("Hello world!");
        delay.delay(500.millis());
    }
}
#+END_SRC

#+BEGIN_SRC rust :noweb yes :tangle src/main.rs
  <<macros>>
  <<imports>>
  <<main>>
#+END_SRC
